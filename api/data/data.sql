DROP TABLE IF EXISTS permissao CASCADE;
DROP TABLE IF EXISTS usuario CASCADE;
DROP TABLE IF EXISTS comentario CASCADE;
DROP TABLE IF EXISTS postagem CASCADE;
DROP TABLE IF EXISTS curtidas_postagem CASCADE;
DROP TABLE IF EXISTS curtidas_comentario CASCADE;

CREATE TABLE usuario (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    apelido VARCHAR(50),
    data date,
    senha VARCHAR(128) NOT NULL,
    imagem VARCHAR(512),
    numero_animais int,
    endereco VARCHAR(512),
    atuacao VARCHAR(512),
    tipo VARCHAR(100) NOT NULL,
    ativo BOOLEAN NOT NULL
);
ALTER TABLE usuario ADD CONSTRAINT pk_usuario PRIMARY KEY (id);
ALTER TABLE usuario ADD CONSTRAINT uk_usuario_email UNIQUE (email);


CREATE TABLE permissao (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	tipo VARCHAR(100) NOT NULL,
	usuario_id BIGINT NOT NULL
);
ALTER TABLE permissao ADD CONSTRAINT pk_permissao PRIMARY KEY (id);
ALTER TABLE permissao ADD CONSTRAINT uk_permissao UNIQUE (tipo, usuario_id);
ALTER TABLE permissao ADD CONSTRAINT fk_permissao_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;


CREATE TABLE postagem (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    usuario_id BIGINT NOT NULL,
    data_postagem TIMESTAMP,
    lugar VARCHAR(255),
    foto_postagem VARCHAR(512),
    curtidas INT,
    descricao VARCHAR(2048),
    privado boolean
);
ALTER TABLE postagem ADD CONSTRAINT pk_postagem PRIMARY KEY (id);
ALTER TABLE postagem ADD CONSTRAINT fk_postagem_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;


CREATE TABLE comentario (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    usuario_id BIGINT NOT NULL,
    postagem_id BIGINT NOT NULL,
    data_comentario TIMESTAMP,
    curtidas INT,
    descricao VARCHAR(2048)
);
ALTER TABLE comentario ADD CONSTRAINT pk_comentario PRIMARY KEY (id);
ALTER TABLE comentario ADD CONSTRAINT fk_comentario_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;
ALTER TABLE comentario ADD CONSTRAINT fk_comentario_postagem FOREIGN KEY (postagem_id) REFERENCES postagem;


CREATE TABLE curtidas_comentario (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    usuario_id BIGINT NOT NULL,
    comentario_id BIGINT NOT NULL
);
ALTER TABLE curtidas_comentario ADD CONSTRAINT pk_curtidas_comentario PRIMARY KEY (id);
ALTER TABLE curtidas_comentario ADD CONSTRAINT fk_curtidas_comentario_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;
ALTER TABLE curtidas_comentario ADD CONSTRAINT fk_curtidas_comentario_comentario FOREIGN KEY (comentario_id) REFERENCES comentario;


CREATE TABLE curtidas_postagem (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    usuario_id BIGINT NOT NULL,
    postagem_id BIGINT NOT NULL
);
ALTER TABLE curtidas_postagem ADD CONSTRAINT pk_curtidas_postagem PRIMARY KEY (id);
ALTER TABLE curtidas_postagem ADD CONSTRAINT fk_curtidas_postagem_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;
ALTER TABLE curtidas_postagem ADD CONSTRAINT fk_curtidas_postagem_postagem FOREIGN KEY (postagem_id) REFERENCES postagem;

CREATE TABLE amizade (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	usuario_id BIGINT NOT NULL,
	outro_usuario_id BIGINT NOT NULL
);
ALTER TABLE amizade ADD CONSTRAINT pk_amizade PRIMARY KEY (id);
ALTER TABLE amizade ADD CONSTRAINT uk_amizade UNIQUE (usuario_id, outro_usuario_id);
ALTER TABLE amizade ADD CONSTRAINT fk_amizade FOREIGN KEY (usuario_id) REFERENCES usuario;
ALTER TABLE amizade ADD CONSTRAINT fk_amizades FOREIGN KEY (outro_usuario_id) REFERENCES usuario;